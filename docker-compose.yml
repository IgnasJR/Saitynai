version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: tune_postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./queries.sql:/docker-entrypoint-initdb.d/queries.sql:ro
    ports:
      - "${POSTGRES_PORT}:5432"

  redis:
    image: redis:7
    container_name: tune_redis
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tune_backend
    restart: always
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
    volumes:
      - ./backend:/app
    working_dir: /app
    ports:
      - "${PORT}:${PORT}"
    command: ["npm", "run", "start"]
    expose:
      - "${PORT}"

  nginx:
    image: nginx:latest
    container_name: tune_nginx
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  postgres_data:
  redis_data:
